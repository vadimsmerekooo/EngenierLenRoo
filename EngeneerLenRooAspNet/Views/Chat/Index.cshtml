@model ChatViewModel
@{
    ViewData["Title"] = "Чат Центра";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item active" aria-current="page">Чат</li>
    </ol>
</nav>
<nav class="navbar navbar-search navbar-light bg-secondary justify-content-between">
    <a href="#" onclick="chatGroupCreate();" data-toggle="modal" data-target="#exampleModalCenter" class="btn btn-success"><i class="bi bi-plus-square"></i> Создать групповой чат</a>
</nav>

@*
<div id="inputForm">
    <input type="text" id="message" />
    <input type="button" id="sendBtn" value="Отправить" />
</div>
 *@

<div class="container py-5 px-4">
    <div class="row rounded-lg overflow-hidden shadow">
        <!-- Users box-->
        <div class="col-4 px-0">
            <div class="bg-white">

                <div class="bg-gray px-4 py-2 bg-light d-flex">
                    <div class="col-4 p-0">
                        <p class="h6 mb-0 py-1">Чаты</p>
                    </div>
                    <div class="col-8 p-0">
                        <form class="form-inline">
                            <div class="input-group">
                                <input id="searchEmployeeInput" onkeydown="search();" type="text" class="form-control" placeholder="Поиск...">
                                <button type="button" class="btn bg-transparent" style="margin-left: -40px; z-index: 100;" onclick="cleareSearch();">
                                    <i class="bi bi-x"></i>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <div id="messagesbox" class="messages-box" style="overflow-x: hidden;">
                    <partial name="_messagesBoxPartial" model="Model" />
                </div>
            </div>
        </div>
        <!-- Chat Box-->
        <div id="chatroombox" class="col-8 px-0">
            @if (Model.ChatActive != null)
            {
                <partial name="_chatBoxPartial" model="Model" />
            }
            else
            {
                <div class="col d-flex justify-content-center align-items-center h-100">
                    <div>
                        Выберите чат для начала диалога.
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<partial name="_createGroupPartial" model="Model.EmployeesGroup.Where(e => Model.User.IsCanIWriteUser(e) && e.Id != Model.User.Id).ToList()" />

<script src="~/js/signalr/dist/browser/signalr.min.js"></script>
<script>


    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/chat-center")
        .withAutomaticReconnect()
        .configureLogging(signalR.LogLevel.Information)
        .build();

    hubConnection.on("GroupDelete", function (roomName) {
        const chatBox = document.getElementById("chatroom" + roomName);
        const chatListItem = document.getElementById("chatListItem" + roomName);
        if(chatBox){
            document.getElementById('chatroombox').innerHTML = `<div id="chatempty" class="card text-center">
                    <div class="card-body">
                        Чат удален.
                    </div>
                </div>`;
        }
        if(chatListItem){
            chatListItem.parentNode.removeChild(chatListItem);
        }
    });
    hubConnection.on("DeleteUserGroup", function (roomName, user) {
        const userId = `@Model.User.Id`;
        if (user == userId) {
            const chatBox = document.getElementById("chatroom" + roomName);
            const chatListItem = document.getElementById("chatListItem" + roomName);
            if (chatBox) {
                chatBox.classList.add("disable");
                chatBox.innerHTML = `<div id="chatempty" class="card text-center">
                        <div class="card-body">
                            Вы были удалены из чата.
                        </div>
                    </div>`;
            }
            if (chatListItem) {
                chatListItem.parentNode.removeChild(chatListItem);
            }
        }
    });

    hubConnection.on("Read", function (messageId, idChat) {
        const checkMessage = `bi-check-all`;
        const uncheckMessage = `bi-check`;
        let message = document.getElementById("messageId" + messageId);
        let messageBox = document.getElementById("messageBoxId" + messageId);
        if (message !== null) {
            message.classList.remove(uncheckMessage);
            message.classList.add(checkMessage);
        }
        if (messageBox !== null) {
            messageBox.classList.remove(uncheckMessage);
            messageBox.classList.add(checkMessage);
        }
        var elem = document.getElementById("chatNewMessageId" + idChat);
        if (elem !== null) {
            elem.parentNode.removeChild(elem);
        }
    });
    hubConnection.on("Print", function (idChat, user) {
        var elemTag = document.getElementById('messagePrint' + idChat);
        var userId = document.getElementById('userId').innerHTML;
        if (elemTag != null && userId != null) {
            const message = elemTag.innerHTML;
            const print = "Печатает...";
            if (elemTag.innerHTML != print && userId != user) {
                elemTag.innerHTML = print;
                setTimeout(
                    () => {
                        elemTag.innerHTML = message;
                    },
                    4 * 1000
                );
            }
        }
    });

    hubConnection.on("Send", function (roomName, UserSend, userName, messageId, message, date, typeChat, idAdminChat, fileInfo) {
        const file = JSON.parse(fileInfo);
        const messageOut = `<div class="media ml-auto mb-3 float-right" style="max-width: 65%;">
                            <div class="media-body">
                                <div class="bg-primary rounded py-2 px-3 mb-2">
                                    <p class="text-small mb-0 text-white">${message}</p>
                                            <i id="messageBoxId${messageId}" class="bi bi-check) text-light"></i>
                                </div>
                                    <p class="small text-muted">${date}</p>
                            </div>
                        </div>`;
        const messageIn = `<div class="media mr-auto mb-3 float-left" style="max-width: 65%;">
                            <img src="../img/resource/user-icon.png" alt="user" width="50" class="rounded-circle">
                            <div class="media-body ml-3">
                                <div class="bg-light rounded py-2 px-3 mb-2 shadow">
                                    <p class="mb-0">${message}</p>
                                    <div class="d-flex align-items-center">
                                            <i id="messageBoxId${messageId}" class="bi bi-check"></i>
                                    </div>
                                </div>
                                <p class="small text-muted">${date}</p>
                            </div>
                        </div>`;
        const messageInDirectAdmin = `<div class="media mr-auto mb-3 float-left" style="max-width: 65%;">
                                        <img src="../img/resource/user-icon.png" alt="user" width="50" class="rounded-circle">
                                    <div class="media-body ml-3">
                                            <div class="bg-light rounded py-2 px-3 mb-2 shadow">
                                                        <p class="text-small text-muted">${userName}</p>
                                                <p class="mb-0">${message}</p>
                                            <div class="d-flex align-items-center">
                                                            <i id="messageBoxId${messageId}" class="bi bi-check"></i>
                                                            <div class="text-muted text-small float-end">Администратор</div>
                                            </div>

                                        </div>
                                            <p class="small text-muted">${date}</p>
                                    </div>
                                </div>`;
        const messageInDirect = `<div class="media mr-auto mb-3 float-left" style="max-width: 65%;">
                                            <img src="../img/resource/user-icon.png" alt="user" width="50" class="rounded-circle">
                                        <div class="media-body ml-3">
                                                <div class="bg-light rounded py-2 px-3 mb-2 shadow">
                                                                <p class="text-small text-muted">${userName}</p>
                                                    <p class="mb-0">${message}</p>
                                                <div class="d-flex align-items-center">
                                                                <i id="messageBoxId${messageId}" class="bi bi-check"></i>
                                                </div>

                                            </div>
                                                <p class="small text-muted">${date}</p>
                                        </div>
                                    </div>`;

        const messageOutFile = `<div class="media ml-auto mb-3 float-right" style="max-width: 65%;">
                                <div class="media-body">
                                    <div class="bg-primary rounded py-2 px-3 mb-2">

                                    <div class="d-flex alert alert-info bg-opacity-50">
                                        <a href="${file.Path}" class="text-dark" download="file">
                                            <div class="row">
                                                <p>
                                                    <i class="bi bi-download pr-3"></i>${file.Name}
                                                </p>
                                            </div>
                                            <div class="row">
                                                Скачать -> ${file.Size}
                                            </div>
                                        </a>
                                    </div>
                                        <p class="text-small mb-0 text-white">${message}</p>
                                                <i id="messageBoxId${messageId}" class="bi bi-check text-light"></i>
                                    </div>
                                    <p class="small text-muted">${date}</p>
                                </div>
                            </div>`;
        const messageInFile = `<div class="media mr-auto mb-3 float-left" style="max-width: 65%;">
                                    <img src="../img/resource/user-icon.png" alt="user" width="50" class="rounded-circle">
                                <div class="media-body ml-3">
                                    <div class="bg-light rounded py-2 px-3 mb-2 shadow">


                                        <div class="d-flex alert alert-info bg-opacity-50">
                                            <a href="${file.Path}" class="text-dark" download="file">
                                                <div class="row">
                                                    <p>
                                                        <i class="bi bi-download pr-3"></i>${file.Name}
                                                    </p>
                                                </div>
                                                <div class="row">
                                                    Скачать -> ${file.Size}
                                                </div>
                                            </a>
                                        </div>
                                        <p class="mb-0">${message}</p>
                                        <div class="d-flex align-items-center">
                                                        <i id="messageBoxId${messageId}" class="bi bi-check"></i>
                                        </div>
                                    </div>
                                    <p class="small text-muted">${date}</p>
                                </div>
                            </div>`;
        const messageInFileDirectAdmin = `<div class="media ml-auto mb-3 float-left" style="max-width: 65%;">
                                            <img src="../img/resource/user-icon.png" alt="user" width="50" class="rounded-circle">
                                        <div class="media-body ml-3">
                                                <div class="bg-light rounded py-2 px-3 mb-2 shadow">
                                                            <p class="text-small text-muted">${userName}</p>


                                        <div class="d-flex alert alert-info bg-opacity-50">
                                            <a href="${file.Path}" class="text-dark" download="file">
                                                <div class="row">
                                                    <p>
                                                        <i class="bi bi-download pr-3"></i>${file.Name}
                                                    </p>
                                                </div>
                                                <div class="row">
                                                    Скачать -> ${file.Size}
                                                </div>
                                            </a>
                                        </div>
                                                    <p class="mb-0">${message}</p>
                                                <div class="d-flex align-items-center">
                                                                <i id="messageBoxId${messageId}" class="bi bi-check"></i>
                                                                <div class="text-muted text-small float-end">Администратор</div>
                                                </div>

                                            </div>
                                                <p class="small text-muted">${date}</p>
                                        </div>
                                    </div>`;
        const messageInFileDirect = `<div class="media ml-auto mb-3 float-left" style="max-width: 65%;">
                                                <img src="../img/resource/user-icon.png" alt="user" width="50" class="rounded-circle">
                                            <div class="media-body ml-3">
                                                    <div class="bg-light rounded py-2 px-3 mb-2 shadow">
                                                                <p class="text-small text-muted">${userName}</p>


                                        <div class="d-flex alert alert-info bg-opacity-50">
                                            <a href="${file.Path}" class="text-dark" download="file">
                                                <div class="row">
                                                    <p>
                                                        <i class="bi bi-download pr-3"></i>${file.Name}
                                                    </p>
                                                </div>
                                                <div class="row">
                                                    Скачать -> ${file.Size}
                                                </div>
                                            </a>
                                        </div>
                                                        <p class="mb-0">${message}</p>
                                                    <div class="d-flex align-items-center">
                                                                    <i id="messageBoxId${messageId}" class="bi bi-check"></i>
                                                    </div>

                                                </div>
                                                    <p class="small text-muted">${date}</p>
                                            </div>
                                        </div>`;

        const messageOutImage = `<div class="media ml-auto mb-3 float-right" style="max-width: 65%;">
                                <div class="media-body">
                                    <div class="bg-primary rounded py-2 px-3 mb-2">
                                            <img src="${file.Path}" class="img-thumbnail" style="max-width: 200px;"  loading="lazy">
                                        <p class="text-small mb-0 text-white">${message}</p>
                                            <i id="messageBoxId${messageId}" class="bi bi-check text-light"></i>
                                    </div>
                                    <p class="small text-muted">${date}</p>
                                </div>
                            </div>`;
        const messageInImage = `<div class="media mr-auto mb-3 float-left" style="max-width: 65%;">
                                    <img src="../img/resource/user-icon.png" alt="user" width="50" class="rounded-circle">
                                <div class="media-body ml-3">
                                    <div class="bg-light rounded py-2 px-3 mb-2 shadow">
                                            <img src="${file.Path}" class="img-thumbnail" style="max-width: 200px;" loading="lazy">
                                        <p class="mb-0">${message}</p>
                                        <div class="d-flex align-items-center">
                                                <i id="messageBoxId${messageId}" class="bi bi-check"></i>
                                        </div>
                                    </div>
                                    <p class="small text-muted">${date}</p>
                                </div>
                            </div>`;
        const messageInImageDirectAdmin = `<div class="media mr-auto mb-3 float-left" style="max-width: 65%;">
                                                    <img src="../img/resource/user-icon.png" alt="user" width="50" class="rounded-circle">
                                                <div class="media-body ml-3">
                                                                <div class="bg-light rounded py-2 px-3 mb-2 shadow">
                                                                            <p class="text-small text-muted">${userName}</p>
                                                    <img src="${file.Path}" class="img-thumbnail" style="max-width: 200px;" loading="lazy">
                                                            <p class="mb-0">${message}</p>
                                                        <div class="d-flex align-items-center">
                                                                            <i id="messageBoxId${messageId}" class="bi bi-check"></i>
                                                                    <div class="text-muted text-small float-end">Администратор</div>
                                                        </div>

                                                    </div>
                                                        <p class="small text-muted">${date}</p>
                                                </div>
                                            </div>`;
        const messageInImageDirect = `<div class="media mr-auto mb-3 float-left" style="max-width: 65%;">
                                                <img src="../img/resource/user-icon.png" alt="user" width="50" class="rounded-circle">
                                            <div class="media-body ml-3">
                                                            <div class="bg-light rounded py-2 px-3 mb-2 shadow">
                                                                        <p class="text-small text-muted">${userName}</p>
                                                <img src="${file.Path}" class="img-thumbnail" style="max-width: 200px;" loading="lazy">
                                                        <p class="mb-0">${message}</p>
                                                    <div class="d-flex align-items-center">
                                                                    <i id="messageBoxId${messageId}" class="bi bi-check"></i>
                                                    </div>

                                                </div>
                                                    <p class="small text-muted">${date}</p>
                                            </div>
                                        </div>`;



        var elem = document.getElementById("chatempty");
        if (elem !== null) {
            elem.parentNode.removeChild(elem);
        }

        let chatRoom = document.getElementsByClassName('chatroomboxActive')[0];
        if (chatRoom != undefined || chatRoom != null) {
            const chatActiveId = chatRoom.id.replace('chatroom', '')
            if (chatActiveId != null && chatActiveId == roomName) {
                messagesBoxPartialUpdateDirect(roomName);
            }
            else {
                messagesBoxPartialUpdateDirect(chatActiveId);
            }
        }
        else {
            messagesBoxPartialUpdate();
        }

        if (typeChat === `Direct`) {
            if (`@Model.User.Id` === UserSend) {
                if (file.IsNull == "exsist") {
                    if (file.Type == "image") {
                        document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageOutImage);
                        scrollToLowerChat();
                    }
                    else {
                        document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageOutFile);
                        scrollToLowerChat();
                    }
                } else {
                    document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageOut);
                    scrollToLowerChat();
                }
            }
            else {
                if (file.IsNull == "exsist") {
                    if (file.Type == "image") {
                        document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageInImage);
                    }
                    else {
                        document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageInFile);
                    }
                } else {
                    document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageIn);
                }
            }
        }
        if (typeChat === `Group`) {
            if (`@Model.User.Id` === UserSend) {
                if (file.IsNull == "exsist") {
                    if (file.Type == "image") {
                        document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageOutImage);
                        scrollToLowerChat();
                    }
                    else {
                        document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageOutFile);
                        scrollToLowerChat();
                    }
                } else {
                    document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageOut);
                    scrollToLowerChat();
                }
            }
            else {
                if (file.IsNull == "exsist") {
                    if (file.Type == "image") {
                        if (idAdminChat == UserSend) {
                            document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageInImageDirectAdmin);
                        }
                        else {
                            document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageInImageDirect);
                        }
                    }
                    else {
                        if (idAdminChat == UserSend) {
                            document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageInFileDirectAdmin);
                        }
                        else {
                            document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageInFileDirect);
                        }
                    }
                } else {
                    if (idAdminChat == UserSend) {
                        document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageInDirectAdmin);
                    }
                    else {
                        document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageInDirect);
                    }
                }
            }
        }
    });


    async function Send(room, user, userFio) {
        const message = document.getElementById("messageinput").value;
        const file = document.getElementById("fileUploadInput").files[0];


        if (message.trim() === "" && file == null)
            return;

        if (file) {
            var url = '@Url.Action("UploadFile", "Chat")';
            var fd = new FormData();
            fd.append("fileUploadInput", file);
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    const resultIdFile = JSON.parse(xhr.responseText).file;
                    hubConnection.invoke("Send", user, userFio, message.trim(), room, resultIdFile);
                }
                else {
                    return;
                }
            }
            xhr.open("POST", url);
            xhr.send(fd);
        }
        else {
            hubConnection.invoke("Send", user, userFio, message.trim(), room, "");
        }
        clearInputUploadFile('true');
        document.getElementById("messageinput").value = '';
        document.getElementById("messageinput").focus();
    }
    function Read(user, room) {
        hubConnection.invoke("Read", user, room);
    }
    function Print(room, user) {
        hubConnection.invoke("Print", room, user);
    }
    hubConnection.start();
</script>