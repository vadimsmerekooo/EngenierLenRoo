@model ChatViewModel
@{
    ViewData["Title"] = "Чат Центра";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item active" aria-current="page">Чат</li>
    </ol>
</nav>
<nav class="navbar navbar-search navbar-light bg-secondary justify-content-between">
    <a class="btn btn-success" asp-area="" asp-controller="Chat" asp-action="CreateGroup"><i class="bi bi-plus-square"></i> Создать групповой чат</a>
</nav>

@*
<div id="inputForm">
    <input type="text" id="message" />
    <input type="button" id="sendBtn" value="Отправить" />
</div>
 *@

<div class="container py-5 px-4">
    <div class="row rounded-lg overflow-hidden shadow">
        <!-- Users box-->
        <div class="col-4 px-0">
            <div class="bg-white">

                <div class="bg-gray px-4 py-2 bg-light">
                    <p class="h5 mb-0 py-1">Чаты</p>
                </div>

                <div class="messages-box">
                    <div class="list-group rounded-0">
                        @if (Model.Chats.Count == 0)
                        {
                            <div class="bg-gray px-4 py-2 bg-light">
                                <p class="h6 mb-0 py-1">Список чатов пуст.</p>
                            </div>
                        }
                        @foreach (var chat in Model.Chats)
                        {
                            if (chat.TypeChat is TypeChat.Direct)
                            {
                                <a class="list-group-item list-group-item-action @(Model.ChatActive?.Id == chat.Id ? "active" : "") rounded-0" asp-action="Index" asp-route-id="@chat.Id">
                                    <div class="media">
                                        <img src="~/img/resource/user-icon.png" alt="user" width="50" class="rounded-circle">
                                        <div class="media-body chat-list-body ml-4">
                                            <div class="align-items-center justify-content-between mb-1">
                                                <h6 class="mb-0">@chat.ChatUsers.FirstOrDefault(u => u.Id != Model.User.Id).Fio</h6>
                                                @if (chat.Messages.Count != 0)
                                                {
                                                    <small class="small font-weight-bold">
                                                        @chat.Messages.OrderByDescending(d => d.DateTime).First()?.DateTime.ToShortDateString()
                                                        @chat.Messages.OrderByDescending(d => d.DateTime).First()?.DateTime.ToShortTimeString()
                                                    </small>
                                                }
                                                else
                                                {
                                                    <small class="small font-weight-bold">
                                                        Чат пуст.
                                                    </small>
                                                }
                                            </div>
                                            @if (chat.Messages.Count != 0)
                                            {
                                                <p class="font-italic mb-0 text-small text-truncate">@chat.Messages.OrderByDescending(d => d.DateTime).First().Text</p>
                                            }
                                        </div>
                                    </div>
                                </a>
                            }
                        }
                        <div class="bg-gray px-4 py-2 bg-light">
                            <p class="h5 mb-0 py-1">Пользователи</p>
                        </div>

                        @foreach (var employee in Model.Employees)
                        {
                            if (!Model.Chats.Any(u => u.ChatUsers.Any(emp => emp.Fio == employee.Fio)) && !employee.Fio.Contains("admin"))
                            {
                                <a class="list-group-item list-group-item-action rounded-0" asp-action="CreateDialog" asp-route-employeeId="@employee.Id">
                                    <div class="media">
                                        <img src="~/img/resource/user-icon.png" alt="user" width="50" class="rounded-circle">
                                        <div class="media-body chat-list-body ml-4">
                                            <div class="d-flex align-items-center justify-content-between mb-1">
                                                <h6 class="mb-0">@employee.Fio</h6>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
        <!-- Chat Box-->
        <div class="col-8 px-0">
            @if (Model.ChatActive != null && Model.ChatActive.Messages.Count != null)
            {
                <div id="chatroom@(Model.ChatActive.Id)" class="px-4 py-5 chat-box bg-light chatroombox">

                    @if (Model.ChatActive.Messages.Count == 0)
                    {
                        <div id="chatempty" class="card text-center">
                            <div class="card-body">
                                Диалог пуст. Напишите первое сообщение.
                            </div>
                        </div>
                    }
                    @foreach (var message in Model.ChatActive?.Messages)
                    {
                        if (message.User == Model.User)
                        {
                            <div class="media w-75 ml-auto mb-3">
                                <div class="media-body">
                                    <div class="bg-primary rounded py-2 px-3 mb-2">
                                        <p class="text-small mb-0 text-white">@message.Text</p>
                                        <i id="messageId@(message.Id)" class="bi bi-@(message.Status is StatusMessage.NotRead ? "check" : "check-all")"></i>
                                    </div>
                                    <p class="small text-muted">@message.DateTime.ToShortTimeString()</p>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="media w-75 mb-3">
                                <img src="~/img/resource/user-icon.png" alt="user" width="50" class="rounded-circle">
                                <div class="media-body ml-3">
                                    <div class="bg-light rounded py-2 px-3 mb-2 shadow">
                                        <p class="text-small mb-0 text-muted">@message.Text</p>
                                        <i id="messageId@(message.Id)" class="bi bi-@(message.Status is StatusMessage.NotRead ? "check" : "check-all")"></i>
                                    </div>
                                    <p class="small text-muted">@message.DateTime.ToShortTimeString()</p>
                                </div>
                            </div>
                        }
                    }

                </div>
            }
            else
            {
                <div class="card text-center">
                    <div class="card-body">
                        Выберите чат для начала диалога.
                    </div>
                </div>
            }
            @if (Model.ChatActive != null && Model.ChatActive.Messages.Count != null)
            {
                <form>
                    <div id="inputForm" class="input-group">
                        <input id="messageinput" type="text" placeholder="Введите сообщение..." aria-describedby="button-addon2" class="form-control rounded-0 border-0 py-4 bg-light">
                        <div class="input-group-append">
                            <button id="sendButton" type="button" onclick="Send(`@Model.ChatActive.Id`, `@Model.User.Id`, `@Model.User.Fio`,);" class="btn btn-link"> <i class="fa fa-paper-plane"></i></button>
                        </div>
                    </div>
                </form>
            }

        </div>
    </div>
</div>

<script src="~/js/signalr/dist/browser/signalr.min.js"></script>
<script>


    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/chat-center")
        .withAutomaticReconnect()
        .configureLogging(signalR.LogLevel.Information)
        .build();

    hubConnection.on("Read", function (messageId) {
        const checkMessage = `bi-check-all`;
        const uncheckMessage = `bi-check`;
        let message = document.getElementById("messageId" + messageId);
        if (message !== null) {
            message.classList.remove(uncheckMessage);
            message.classList.add(checkMessage);
        }
    });
    hubConnection.on("Send", function (roomName, UserSend, userName, messageId, message, date) {
        const messageOut = `<div class="media w-50 ml-auto mb-3">
                                                    <div class="media-body">
                                                        <div class="bg-primary rounded py-2 px-3 mb-2">
                                                                <p class="text-small mb-0 text-white">${message}</p>
                                                    <i id="messageId${messageId}" class="bi bi-check"></i>
                                                        </div>
                                                        <p class="small text-muted">${date}</p>
                                                    </div>
                                                </div>`;

        const messageIn = `<div class="media w-50 mb-3">
                                                    <img src="../img/resource/user-icon.png" alt="user" width="50" class="rounded-circle">
                                                    <div class="media-body ml-3">
                                                            <div class="rounded py-2 px-3 mb-2 shadow">
                                                                <p class="text-small mb-0 text-muted">${message}</p>
                                                        <i id="messageId${messageId}" class="bi bi-check"></i>
                                                        </div>
                                                        <p class="small text-muted">${date}</p>
                                                    </div>
                                                </div>`;


        var elem = document.getElementById("chatempty");
        if (elem !== null) {
            elem.parentNode.removeChild(elem);
        }


        if (`@Model.User.Id` === UserSend) {
            document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageOut);
            scrollToLowerChat();
        }
        else {
            document.getElementById("chatroom" + roomName).insertAdjacentHTML('beforeend', messageIn);
        }
    });

    function Send(room, user, userFio) {
        const message = document.getElementById("messageinput").value;
        if (message.trim() === "")
            return;
        hubConnection.invoke("Send", user, userFio, message.trim(), room);
        document.getElementById("messageinput").value = '';
        document.getElementById("messageinput").focus();
    }

    hubConnection.start();
</script>